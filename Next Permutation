 vector<int> v;
        int n = nums.size();
        v.push_back(nums.back());
        nums.pop_back();
        for(int i=n-2;i>-1;i--){
            v.push_back(nums[i]);
            sort(v.begin(),v.end());
            if(nums[i] < v.back()){
                auto it = v.end() - 1;
                for(it; it>= v.begin();it--){
                    if((*it) == nums[i])
                    break;
                }
                // auto it = find(v.end(),v.begin(),nums[i]);
                it++;
                nums[i] = *it;
                v.erase(it);
                for(int i=0;i<v.size();i++)
                nums.push_back(v[i]);
                break;
            }
            nums.pop_back();
        }
        if(nums.size() == 0){
            for(int i=0;i<v.size();i++)
                nums.push_back(v[i]);
        }
        
        
        Smaller code but take more time :
        
       int n = nums.size();
        
        int i = n - 2;
        
        while(i >= 0 && nums[i] >= nums[i + 1])
        {
            i--;
        }
        
        if(i < 0)
        {
            reverse(nums.begin(), nums.end());
            
            return;
        }
        
        int j = n - 1;
        
        while(j > i && nums[j] <= nums[i])
        {
            j--;
        }
        
        swap(nums[i], nums[j]);
        
        reverse(nums.begin() + i + 1, nums.end());
