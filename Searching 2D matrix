  Approach 1: O(n^2)
  
   bool searchMatrix(vector<vector<int>>& v, int target) {
        for(int i=0;i<v.size();i++){
            if(*(v[i].begin()) <= target && v[i].back() >= target){
                if(find(v[i].begin(),v[i].end(),target) != v[i].end())
                return true;
            }
        }
        return false;
    }
    
    Approach 2 : O(n)
    
   bool searchMatrix(vector<vector<int>>& v, int target) {
        int rows = v.size(),row = 0,col = v[0].size()-1;
        while(row < rows && col > -1){
            int cur = v[row][col];
            if(cur == target) return true;
            if(cur < target) row++;
            else col--;
        }
        
        return false;
    }
    
Img link for explanation = https://drive.google.com/file/d/1xJtwHnplqYBUZT28-8qajqewdbrqkNwC/view?usp=sharing
    
