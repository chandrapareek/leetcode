 bool ispalindrome(string s,int start,int end){
        while(start <= end){
            if(s[start] != s[end])
                return false;
            start++;
            end--;
        }
        return true;
    }
    
    void func(int index,string s,vector<vector<string>>& res,vector<string>& ds){
        if(index == s.length()){
            res.push_back(ds);
            return;
        }
        
        for(int i=index;i<s.length();i++){
            if(ispalindrome(s,index,i)){
                ds.push_back(s.substr(index,i-index+1));
                func(i+1,s,res,ds);
                ds.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> res;
        vector<string> ds;
        func(0,s,res,ds);
        return res;
    }
